"use client";

import React, { useEffect, useRef } from 'react'
import './navbar.css'
import { useGSAP } from '@gsap/react';
import { SplitText } from "gsap/all";
import { gsap } from "gsap";
import { ScrollTrigger } from "gsap/ScrollTrigger";




const Navbar = () => {
  const menuItems = [
    { label: "Home", route: "/" },
    { label: "About", route: "/about" },
    { label: "Carrusel Projects", route: "/carrusel" },
    { label: "Work", route: "/work" },
    { label: "Contact", route: "/contact" },
  ];

  const menuLinksRef = useRef([]);
  const menuLinkContainersRef = useRef([]);
  const menuLinksWrapperRef = useRef(null);
  const navbarRef = useRef(null);
  const navPRef = useRef(null);

  const currentX = useRef(0);
  const targetX = useRef(0);
  const lerpFactor = 0.05;

  const currentHighlighterX = useRef(0);
  const targetHighlighterX = useRef(0);
  const currentHighlighterWidth = useRef(0);
  const targetHighlighterWidth = useRef(0);

  const animationFrameRef = useRef(null);


  // Registrar plugins una vez
  gsap.registerPlugin(SplitText, ScrollTrigger);

  const splitReadyRef = useRef(false);

  useGSAP(() => {
    const menuLinks = menuLinksRef.current;
    const menuLinkContainers = menuLinkContainersRef.current;
    const menuLinksWrapper = menuLinksWrapperRef.current;


    menuLinks.forEach((link) => {
      const chars = link.querySelectorAll("span");
      chars.forEach((char, charIndex) => {
        const split = new SplitText(char, { type: "chars" });
        split.chars.forEach((char) => {
          char.classList.add("char");
        });
        if (charIndex === 1) {
          gsap.set(split.chars, { y: "110%" });
        }
      });
    });

    menuLinkContainers.forEach((link) => {
      const handleMouseEnter = () => {

        const linkCopy = link.querySelectorAll("a span");
        const visibleCopy = linkCopy[0];
        const animatedCopy = linkCopy[1];

        const visibleChars = visibleCopy.querySelectorAll(".char");
        gsap.to(visibleChars, {
          y: "-110%",
          stagger: 0.03,
          duration: 0.25,
          ease: "expo.inOut",
        });

        const animatedChars = animatedCopy.querySelectorAll(".char");
        gsap.to(animatedChars, {
          y: "0%",
          stagger: 0.03,
          duration: 0.25,
          ease: "expo.inOut",
        });

        const linkRect = link.getBoundingClientRect();
        const menuWrapperRect = menuLinksWrapper.getBoundingClientRect();

        targetHighlighterX.current = linkRect.left - menuWrapperRect.left;

        const linkCopyElement = link.querySelector("a span");
        targetHighlighterWidth.current = linkCopyElement
          ? linkCopyElement.offsetWidth
          : link.offsetWidth;
      };

      const handleMouseLeave = () => {

        const linkCopy = link.querySelectorAll("a span");
        const visibleCopy = linkCopy[0];
        const animatedCopy = linkCopy[1];

        const animatedChars = animatedCopy.querySelectorAll(".char");
        gsap.to(animatedChars, {
          y: "110%",
          stagger: 0.03,
          duration: 0.5,
          ease: "expo.inOut",
        });

        const visibleChars = visibleCopy.querySelectorAll(".char");
        gsap.to(visibleChars, {
          y: "0%",
          stagger: 0.03,
          duration: 0.5,
          ease: "expo.inOut",
        });
      };

      link.addEventListener("mouseenter", handleMouseEnter);
      link.addEventListener("mouseleave", handleMouseLeave);
    });

    // marcar split listo
    splitReadyRef.current = true;

    // Estado inicial: navbar oculto por defecto
    try {
      // 1) Mover letras visibles hacia arriba (-110%)
      const allVisibleChars = [];
      menuLinkContainersRef.current.forEach((link) => {
        if (!link) return;
        const spans = link.querySelectorAll('a span');
        const visibleCopy = spans[0];
        if (!visibleCopy) return;
        visibleCopy.querySelectorAll('.char').forEach((c) => allVisibleChars.push(c));
      });
      if (allVisibleChars.length) gsap.set(allVisibleChars, { y: '-110%' });
      // 2) nav-p fuera de vista
      if (navPRef.current) gsap.set(navPRef.current, { y: '-110%' });
      // 3) Contenedor colapsado
      if (navbarRef.current) gsap.set(navbarRef.current, { scaleY: 0, transformOrigin: 'top center' });
    } catch (_) { }

  }, {})

  // ScrollTrigger: colapso progresivo con scrub
  useGSAP(() => {
    // Recolectar todas las letras visibles (copia 0) ya divididas
    const allVisibleChars = [];
    menuLinkContainersRef.current.forEach((link) => {
      if (!link) return;
      const spans = link.querySelectorAll('a span');
      const visibleCopy = spans[0];
      if (!visibleCopy) return;
      visibleCopy.querySelectorAll('.char').forEach((c) => allVisibleChars.push(c));
    });

    const tl = gsap.timeline({
      defaults: { ease: 'none' },
      scrollTrigger: {
        trigger: navbarRef.current,
        start: 'top top',
        end: '+=240', // píxeles de scroll para completar el colapso
        scrub: 0.1,
        // markers: true,
      },
    });

    // 0 -> 0.3: letras y nav-p suben fuera (efecto máscara)
    if (allVisibleChars.length) tl.to(allVisibleChars, { y: '-110%', duration: 0.3 }, 0);
    if (navPRef.current) tl.to(navPRef.current, { y: '-110%', duration: 0.3 }, 0);
    // 0.3 -> 1: la barra se recoge (scaleY 1 -> 0)
    tl.to(navbarRef.current, { scaleY: 0, transformOrigin: 'top center', duration: 0.7 }, 0.3);
  }, []);


  return (
    <div className="navbar-container" ref={navbarRef}>
      {/*<div className="svg-container flex top-0 w-full h-full object-center justify-center">
        <svg xmlns="http://www.w3.org/2000/svg" width="1408" height="324" fill="none" viewBox="0 0 1408 324">
          <path fill="#fff" d="M162.993 153.76c-14.549 0-27.528-2.067-38.936-6.2-11.408-4.133-20.419-9.837-27.032-17.112-6.448-7.275-9.672-15.459-9.672-24.552 0-12.73 4.63-23.89 13.888-33.48 9.259-9.59 22.155-17.112 38.688-22.568 16.533-5.456 35.547-8.184 57.04-8.184 15.707 0 31.331 1.901 46.872 5.704s30.339 9.341 44.392 16.616c14.053 7.11 26.619 15.624 37.696 25.544l-.744 1.488c-11.077-9.92-23.643-18.435-37.696-25.544a200.292 200.292 0 0 0-44.144-16.616c-15.376-3.803-30.835-5.704-46.376-5.704-15.541 0-29.925 1.57-43.152 4.712-13.227 2.976-24.717 7.275-34.472 12.896-9.589 5.621-17.112 12.317-22.568 20.088-5.29 7.605-7.936 15.955-7.936 25.048 0 8.763 3.224 16.699 9.672 23.808 6.448 6.944 15.293 12.483 26.536 16.616 11.243 3.968 23.973 5.952 38.192 5.952 11.408 0 23.312-1.488 35.712-4.464 12.4-3.141 24.717-7.275 36.952-12.4 12.4-5.291 24.056-11.325 34.968-18.104 11.077-6.944 20.832-14.136 29.264-21.576 8.597-7.605 15.293-15.21 20.088-22.816 4.96-7.77 7.44-15.128 7.44-22.072 0-3.307-.992-6.035-2.976-8.184-1.819-2.15-4.299-3.224-7.44-3.224-5.787 0-12.317 2.232-19.592 6.696-7.275 4.299-14.549 10.085-21.824 17.36-7.109 7.11-13.723 14.963-19.84 23.56-5.952 8.432-10.829 16.947-14.632 25.544-3.637 8.432-5.456 16.12-5.456 23.064 0 7.771 1.736 13.971 5.208 18.6 3.472 4.464 8.184 6.696 14.136 6.696 7.44 0 15.293-1.901 23.56-5.704 8.432-3.803 16.864-9.011 25.296-15.624 8.432-6.779 16.451-14.384 24.056-22.816 7.605-8.432 14.384-17.277 20.336-26.536 5.952-9.424 10.664-18.765 14.136-28.024 3.472-9.424 5.208-18.187 5.208-26.288 0-10.25-2.563-18.104-7.688-23.56-4.96-5.621-12.317-8.432-22.072-8.432-10.416 0-21.411 2.48-32.984 7.44-11.573 4.795-23.147 11.49-34.72 20.088-11.408 8.432-22.32 18.187-32.736 29.264-10.251 10.912-19.427 22.485-27.528 34.72-7.936 12.069-14.219 24.221-18.848 36.456-4.629 12.235-6.944 23.891-6.944 34.968 0 16.037 3.803 28.189 11.408 36.456 7.771 8.267 19.179 12.4 34.224 12.4 7.44 0 15.624-1.571 24.552-4.712 8.928-3.141 18.104-7.44 27.528-12.896 9.424-5.621 18.6-12.152 27.528-19.592 9.093-7.605 17.36-15.789 24.8-24.552h1.736c-7.44 8.928-15.789 17.277-25.048 25.048-9.093 7.605-18.435 14.301-28.024 20.088-9.589 5.621-19.013 10.085-28.272 13.392-9.093 3.141-17.36 4.712-24.8 4.712-17.691 0-31.579-5.208-41.664-15.624s-15.128-24.8-15.128-43.152c0-11.904 2.232-23.973 6.696-36.208 4.629-12.235 10.995-24.221 19.096-35.96s17.443-22.65 28.024-32.736c10.581-10.25 21.989-19.261 34.224-27.032 12.235-7.77 24.717-13.805 37.448-18.104 12.896-4.464 25.461-6.696 37.696-6.696 9.755 0 17.691 3.141 23.808 9.424 6.117 6.283 9.176 14.55 9.176 24.8 0 8.432-1.736 17.36-5.208 26.784-3.472 9.424-8.267 18.848-14.384 28.272-5.952 9.424-12.813 18.435-20.584 27.032-7.605 8.597-15.707 16.203-24.304 22.816-8.432 6.613-16.947 11.904-25.544 15.872-8.432 3.803-16.451 5.704-24.056 5.704-6.283 0-11.325-2.397-15.128-7.192-3.803-4.96-5.704-11.491-5.704-19.592 0-7.109 1.819-14.963 5.456-23.56 3.803-8.763 8.763-17.443 14.88-26.04 6.117-8.763 12.813-16.781 20.088-24.056 7.44-7.275 14.797-13.061 22.072-17.36 7.44-4.464 14.136-6.696 20.088-6.696 3.803 0 6.779 1.157 8.928 3.472 2.149 2.15 3.224 5.29 3.224 9.424 0 7.11-2.48 14.632-7.44 22.568-4.795 7.77-11.491 15.541-20.088 23.312-8.597 7.605-18.435 14.88-29.512 21.824-11.077 6.779-22.816 12.813-35.216 18.104-12.4 5.291-24.965 9.507-37.696 12.648-12.565 2.976-24.635 4.464-36.208 4.464ZM56.849 211.296c0 8.928 2.232 17.36 6.696 25.296 4.299 8.101 10.333 15.211 18.104 21.328 7.605 6.117 16.368 10.912 26.288 14.384 10.085 3.472 20.749 5.208 31.992 5.208 19.344 0 37.117-2.149 53.32-6.448 16.368-4.299 32.075-11.243 47.12-20.832 15.211-9.424 30.421-22.072 45.632-37.944 15.211-15.872 31.331-35.299 48.36-58.28 4.795-6.613 10.416-13.805 16.864-21.576 6.613-7.936 13.805-16.285 21.576-25.048h12.152c-4.464 2.315-8.597 4.877-12.4 7.688-3.637 2.645-7.523 6.117-11.656 10.416-4.133 4.299-8.928 9.837-14.384 16.616-5.456 6.613-12.152 15.128-20.088 25.544-14.219 20.005-27.032 37.117-38.44 51.336-11.408 14.219-22.072 25.957-31.992 35.216-9.92 9.424-19.757 16.781-29.512 22.072-9.589 5.291-19.592 9.011-30.008 11.16-10.416 2.149-21.989 3.224-34.72 3.224-14.219 0-27.776-2.149-40.672-6.448-12.731-4.133-24.056-9.92-33.976-17.36-9.755-7.275-17.443-15.707-23.064-25.296-5.787-9.589-8.68-19.675-8.68-30.256 0-11.243 2.563-21.576 7.688-31 5.125-9.589 12.317-17.939 21.576-25.048 9.093-7.109 19.84-12.648 32.24-16.616 12.565-3.968 26.123-5.952 40.672-5.952 14.549 0 27.197 1.984 37.944 5.952 10.747 3.968 19.096 9.507 25.048 16.616 5.952 6.944 8.928 15.211 8.928 24.8 0 8.101-2.067 15.707-6.2 22.816-4.133 6.944-9.837 13.061-17.112 18.352-7.275 5.291-15.789 9.424-25.544 12.4-9.589 2.976-19.923 4.464-31 4.464-14.549 0-26.123-2.893-34.72-8.68-8.432-5.787-12.648-13.475-12.648-23.064 0-5.787 2.149-10.995 6.448-15.624 4.299-4.795 9.589-7.688 15.872-8.68l1.984.744c-6.283.992-11.656 3.72-16.12 8.184-4.299 4.464-6.448 9.507-6.448 15.128 0 9.259 4.051 16.616 12.152 22.072 8.267 5.621 19.427 8.432 33.48 8.432 10.747 0 20.832-1.488 30.256-4.464 9.589-2.811 17.939-6.861 25.048-12.152 7.275-5.125 12.896-11.077 16.864-17.856 4.133-6.944 6.2-14.301 6.2-22.072 0-9.259-2.976-17.277-8.928-24.056-5.787-6.944-13.971-12.317-24.552-16.12-10.581-3.803-22.899-5.704-36.952-5.704-14.549 0-27.941 1.901-40.176 5.704-12.235 3.803-22.899 9.176-31.992 16.12-9.093 6.944-16.12 15.128-21.08 24.552-4.96 9.424-7.44 19.675-7.44 30.752ZM352.573 217h-15l53.4-143h16.4l53.8 143h-15.6l-14.4-39.6h-64.2l-14.4 39.6Zm46.4-129.2-27.2 76.6h54.8l-27.2-76.6h-.4ZM527.727 217h-60.8V74h57c28.2 0 45.2 13.6 45.2 36 0 17-9.8 25.8-22.6 30.2v.4c16 3 28.4 14.8 28.4 35.4 0 27-18.8 41-47.2 41Zm-46.2-81.6h45.2c19.8 0 27.2-9.8 27.2-24 0-14.6-8.8-24.6-27.2-24.6h-45.2v48.6Zm0 68.8h46.8c22.6 0 31.4-11.6 31.4-28.2 0-16.8-10.8-27.8-27.8-27.8h-50.4v56ZM601.386 217h-14.6V74h56c30.4 0 47 14.2 47 40.4 0 19-11 32-26.6 36v.4c32.8 6.6 21.4 62.6 29.2 65v1.2h-15.6c-6.6-6 6.4-59.4-31.8-59.4h-43.6V217Zm0-72.2h37.8c22.8 0 36-10.2 36-30.2 0-18.2-10.4-27.8-35-27.8h-38.8v58Zm116.93 72.2h-14.6V74h14.6v143Zm118.522 0h-99.2V74h97v12.8h-82.4V136h73.6v12.8h-73.6v55.4h84.6V217Zm102.107 0h-91.8V74h14.6v130.2h77.2V217Zm170.985 0h-16.8v-16.8h16.8V217Zm-8.27-102v-8.6c6.4-2.4 8.2-6 8.2-15.6h-8.2V74h16.8v16.8c0 11.2-3.2 20-16.8 24.2Zm112.98 102h-93.6c0-25.6 15.8-44.6 40.8-58.6 25.2-14.4 39-20.4 39-41.4 0-13.6-6.6-28-27.8-28-24 0-33 16.8-33 36.4h-15c0-26.8 15.6-49.2 48.2-49.2 23.6 0 42.8 14.8 42.8 40.6 0 26.2-20.6 38.2-40.8 49.6-16.8 9.6-34.2 19-36.8 37.4v.4h76.2V217Zm98.77 0h-93.6c0-25.6 15.8-44.6 40.8-58.6 25.2-14.4 39-20.4 39-41.4 0-13.6-6.6-28-27.8-28-24 0-33 16.8-33 36.4h-15c0-26.8 15.6-49.2 48.2-49.2 23.6 0 42.8 14.8 42.8 40.6 0 26.2-20.6 38.2-40.8 49.6-16.8 9.6-34.2 19-36.8 37.4v.4h76.2V217Z" />
          <path fill="#fff" d="M1061.22 39.75c-1.84-9.322-2.63-17.288-2.37-23.895.26-6.768 1.46-11.094 3.6-12.979 1.88-1.658 3.69-1.504 5.42.463 3.17 3.591 5.18 8.807 6.05 15.646.78 6.753.54 14.491-.74 23.215-1.35 8.638-3.5 17.75-6.44 27.339-2.94 9.426-6.56 18.77-10.86 28.03-4.29 9.26-9.11 17.842-14.46 25.744-5.42 7.816-11.12 14.363-17.11 19.64-9.23 8.142-18.21 14.079-26.923 17.811-8.63 3.657-16.593 5.054-23.889 4.191-7.286-1.024-13.454-4.401-18.505-10.13-3.769-4.276-6.115-9.351-7.038-15.224-.922-5.874-.532-12.069 1.17-18.584 1.713-6.677 4.632-13.278 8.758-19.803 4.126-6.525 9.354-12.577 15.682-18.156 7.439-6.558 15.714-12.257 24.822-17.095 9.123-4.999 18.533-8.97 28.253-11.912 9.8-3.018 19.41-4.957 28.84-5.817 9.43-1.022 18.18-.834 26.25.562s14.97 4.052 20.7 7.967l-.4.58c-5.74-3.754-12.61-6.286-20.6-7.597-8.07-1.396-16.78-1.621-26.13-.675-9.26.87-18.71 2.82-28.35 5.848-9.64 3.027-18.98 7.003-28.013 11.927-9.023 4.763-17.254 10.423-24.694 16.982-6.328 5.579-11.593 11.588-15.794 18.027-4.116 6.364-7.021 12.724-8.713 19.079-1.692 6.355-2.072 12.389-1.139 18.101.932 5.713 3.283 10.707 7.053 14.983 7.538 8.551 17.267 11.829 29.185 9.833 11.928-2.157 24.865-9.379 38.805-21.667 5.81-5.127 11.38-11.56 16.72-19.302 5.26-7.826 10.03-16.289 14.32-25.389a252.582 252.582 0 0 0 10.83-27.789c3.02-9.502 5.21-18.572 6.56-27.21 1.35-8.638 1.67-16.291.96-22.96-.71-6.667-2.61-11.754-5.7-15.26-1.36-1.54-2.63-1.781-3.83-.726-1.97 1.734-3.02 5.625-3.16 11.674-.14 6.05.63 13.81 2.29 23.285 1.31 7.513 3.35 15.516 6.12 24.01 2.79 8.334 5.72 16.999 8.79 25.996a417.312 417.312 0 0 1 8.32 27.541c2.56 9.289 4.36 18.65 5.38 28.083.94 9.348.64 18.658-.91 27.93-1.39 9.281-4.55 18.371-9.47 27.269-4.84 8.823-11.92 17.342-21.24 25.56-8.38 7.388-17.3 13.045-26.75 16.973-9.46 3.928-18.88 6.081-28.27 6.459-9.397.378-18.233-1.026-26.514-4.213-8.28-3.186-15.398-8.157-21.353-14.913-5.805-6.585-9.737-14.061-11.794-22.429-2.048-8.529-2.301-17.349-.758-26.46 1.553-9.271 4.785-18.275 9.697-27.012 4.997-8.813 11.557-16.8 19.681-23.962 8.894-7.84 18.123-13.317 27.691-16.43 9.49-3.199 18.5-3.924 27.03-2.175 8.54 1.587 15.75 5.716 21.63 12.387 4.45 5.045 7.4 10.884 8.84 17.517 1.45 6.472 1.46 13.298.04 20.478-1.42 7.18-4.21 14.274-8.37 21.281-4.07 6.932-9.44 13.339-16.11 19.219-6.67 5.88-13.35 10.023-20.04 12.428-6.77 2.32-13.15 2.848-19.125 1.583-5.978-1.264-11.116-4.334-15.413-9.208-4.372-4.96-6.796-10.726-7.271-17.298-.55-6.658.68-13.365 3.69-20.122 3.02-6.918 7.694-13.166 14.022-18.745 6.842-6.031 13.647-9.52 20.407-10.467 6.69-1.033 12.03.717 16.03 5.249 2.79 3.164 4.28 6.934 4.49 11.308.22 4.214-.78 8.593-3 13.138-2.14 4.469-5.44 8.664-9.88 12.584-2.4 2.111-4.74 3.337-7.02 3.678-2.28.341-4.06-.216-5.35-1.67-1.8-2.052-1.57-5.147.71-9.284 2.29-4.298 6.21-8.897 11.77-13.798 8.98-7.915 18.21-13.392 27.69-16.43 9.57-3.113 18.61-3.715 27.13-1.806 8.52 1.91 15.84 6.328 21.94 13.255 4.68 5.302 7.47 11.576 8.39 18.822 1.08 7.256.43 14.97-1.94 23.14-2.21 8.18-6 16.382-11.36 24.606-5.37 8.224-12.15 15.954-20.36 23.191-11.21 9.876-22.87 17.421-34.99 22.635-11.96 5.224-23.85 8.11-35.677 8.658-11.741.472-22.848-1.438-33.32-5.732-10.472-4.294-19.704-10.973-27.695-20.038-7.539-8.551-12.942-18.301-16.211-29.249-3.268-10.949-4.405-22.409-3.409-34.381 1.082-12.047 4.378-23.995 9.889-35.845l.951.303c-5.416 11.613-8.622 23.405-9.618 35.377-.996 11.972.183 23.394 3.537 34.267 3.194 10.863 8.522 20.527 15.985 28.993 7.916 8.979 17.034 15.53 27.356 19.653 10.235 4.198 21.143 6.056 32.724 5.573 11.578-.482 23.308-3.298 35.178-8.447 11.96-5.224 23.5-12.736 34.62-22.536 8.12-7.162 14.82-14.817 20.1-22.966 5.36-8.063 9.13-16.104 11.33-24.123 2.37-8.009 3.05-15.599 2.04-22.77-.92-7.085-3.69-13.236-8.29-18.453-5.95-6.755-13.11-11.003-21.49-12.741-8.36-1.899-17.2-1.325-26.52 1.723-9.39 2.962-18.45 8.288-27.17 15.978-5.47 4.825-9.35 9.225-11.61 13.202-2.26 3.815-2.56 6.664-.91 8.545 1.06 1.197 2.61 1.658 4.64 1.382 2.05-.436 4.14-1.597 6.28-3.482 4.27-3.769 7.48-7.808 9.61-12.116 2.05-4.394 3-8.655 2.86-12.783-.22-4.214-1.65-7.818-4.29-10.811-3.69-4.19-8.8-5.764-15.33-4.721-6.44.968-12.953 4.354-19.538 10.159-6.157 5.428-10.741 11.52-13.751 18.277-2.999 6.596-4.257 13.099-3.772 19.511.485 6.411 2.876 12.054 7.173 16.928 4.146 4.704 9.128 7.683 14.945 8.937 5.823 1.094 12.003.513 18.523-1.741 6.61-2.331 13.16-6.36 19.66-12.09 6.5-5.729 11.78-11.98 15.84-18.751 4.07-6.932 6.82-13.908 8.23-20.927 1.41-7.019 1.43-13.721.05-20.108-1.36-6.547-4.23-12.301-8.61-17.261-5.72-6.499-12.78-10.538-21.16-12.115-8.38-1.578-17.28-.805-26.68 2.319-9.319 3.048-18.34 8.416-27.062 16.106-8.039 7.086-14.471 14.96-19.297 23.622-4.901 8.576-8.124 17.419-9.666 26.53-1.533 8.95-1.313 17.646.659 26.09 1.983 8.282 5.839 15.673 11.568 22.172 4.976 5.644 10.98 9.697 18.014 12.159 7.119 2.387 14.774 3.313 22.965 2.779 8.199-.696 16.419-2.844 24.639-6.446 8.38-3.591 16.29-8.666 23.73-15.225 8.56-7.539 15.24-15.639 20.07-24.301 4.83-8.661 8.26-17.613 10.29-26.854a126.11 126.11 0 0 0 2.89-28.532c-.12-9.619-.94-19.161-2.44-28.625-1.5-9.463-3.31-18.583-5.43-27.358-2.1-8.937-4.16-17.305-6.17-25.105-2.09-7.885-3.7-14.973-4.84-21.264Z" />
        </svg>
      </div> */}
      <nav >
        <div className="menu-links-wrapper" ref={menuLinksWrapperRef}>
          {menuItems.map((item, index) => (
            <div
              key={item.label}
              className="menu-link"
              ref={(el) => (menuLinkContainersRef.current[index] = el)}
            >
              <a
                href={item.route}
                ref={(el) => (menuLinksRef.current[index] = el)}
              >
                <span>{item.label}</span>
                <span>{item.label}</span>
              </a>
            </div>
          ))}
        </div>

      </nav>
      <div className="nav-p">
        <p ref={navPRef}>The only limit is your imagination.</p>
      </div>
    </div>
  )
}

export default Navbar